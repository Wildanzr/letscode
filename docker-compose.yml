version: "3.7"
services:

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'letscode-rabbitmq'
    restart: always
    ports:
        - 5673:5672
        - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  auth:
    depends_on:
      - rabbitmq
    build:
      context: ./be/auth
      dockerfile: Dockerfile
    image: letscode-auth:skripsi
    container_name: letscode-auth
    restart: always
    ports:
      - "${AUTH_PORT}:6001"
    environment:
      PORT: 6001
      DATABASE_URL: ${MONGODB_URL}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      SECRET: ${JWT_SECRET}
      CLIENT_HOST: ${CLIENT_HOST}

  collaboration:
    depends_on:
      - rabbitmq
    build:
      context: ./be/collaboration
      dockerfile: Dockerfile
    image: letscode-collaboration:skripsi
    container_name: letscode-collaboration
    restart: always
    ports:
      - "${COLLABORATION_PORT}:6002"
    environment:
      PORT: 6002
      DATABASE_URL: ${MONGODB_URL}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      JUDGE_API_URL: ${JUDGE_API_URL}
      JUDGE_API_HOST: ${JUDGE_API_HOST}

  problem:
    build:
      context: ./be/problem
      dockerfile: Dockerfile
    image: letscode-problem:skripsi
    container_name: letscode-problem
    restart: always
    ports:
      - "${PROBLEM_PORT}:6003"
    environment:
      PORT: 6003
      SECRET: ${JWT_SECRET}
      DATABASE_URL: ${MONGODB_URL}

  mailer:
    depends_on:
      - rabbitmq
    build:
      context: ./be/mailer
      dockerfile: Dockerfile
    image: letscode-mailer:skripsi
    container_name: letscode-mailer
    restart: always
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      OAUTH_EMAIL: ${OAUTH_EMAIL}
      OAUTH_REFRESH_TOKEN: ${OAUTH_REFRESH_TOKEN}
      OAUTH_ACCESS_TOKEN: ${OAUTH_ACCESS_TOKEN}
      OAUTH_CLIENT_SECRET: ${OAUTH_CLIENT_SECRET}
      OAUTH_CLIENT_ID: ${OAUTH_CLIENT_ID}
      OAUTH_CODE: ${OAUTH_CODE}

  submission1:
    depends_on:
      - rabbitmq
    build:
      context: ./be/submission
      dockerfile: Dockerfile
    image: letscode-submission:skripsi
    container_name: letscode-submission1
    restart: always
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      DATABASE_URL: ${MONGODB_URL}
      JUDGE_API_URL: ${JUDGE_API_URL}
      JUDGE_API_HOST: ${JUDGE_API_HOST}

  submission2:
    depends_on:
      - rabbitmq
    build:
      context: ./be/submission
      dockerfile: Dockerfile
    image: letscode-submission:skripsi
    container_name: letscode-submission2
    restart: always
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      DATABASE_URL: ${MONGODB_URL}
      JUDGE_API_URL: ${JUDGE_API_URL}
      JUDGE_API_HOST: ${JUDGE_API_HOST}

  submission3:
    depends_on:
      - rabbitmq
    build:
      context: ./be/submission
      dockerfile: Dockerfile
    image: letscode-submission:skripsi
    container_name: letscode-submission3
    restart: always
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      DATABASE_URL: ${MONGODB_URL}
      JUDGE_API_URL: ${JUDGE_API_URL}
      JUDGE_API_HOST: ${JUDGE_API_HOST}

  gateway:
    build:
      context: ./be/gateway
      dockerfile: Dockerfile
    image: letscode-gateway:skripsi
    container_name: letscode-gateway
    restart: always
    ports:
      - "5000:6000"
    environment:
      PORT: 6000
      AUTH_URL: http://auth:6001
      COLLABORATION_URL: http://collaboration:6002
      PROBLEM_URL: http://problem:6003

  y-websocket:
    build:
      context: ./be/websocket
      dockerfile: Dockerfile
    image: letscode-y-websocket:skripsi
    container_name: letscode-y-websocket
    restart: always
    ports:
      - "${WEBSOCKET_PORT}:${WEBSOCKET_PORT}"
    environment:
      PORT: ${WEBSOCKET_PORT}

  web:
    depends_on:
      - gateway
      - auth
      - problem
      - collaboration
      - submission1
      - submission2
      - submission3
      - mailer
      - y-websocket
      - rabbitmq
    build:
      context: ./fe
    image: letscode-web:skripsi
    restart: always
    container_name: letscode-web
    ports:
      - "3000:3000"

volumes:
  rabbitmq-data:
  letscode-mongodb:

  # mongodb:
  #   image: mongo
  #   container_name: letscode-mongodb
  #   ports:
  #     - 7017:27017
  #   volumes:
  #     - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  #     - letscode-mongodb:/data/db
  #   environment:
  #     MONGO_INITDB_DATABASE: letscode
  #     MONGO_INITDB_ROOT_USERNAME: mimin
  #     MONGO_INITDB_ROOT_PASSWORD: 123456